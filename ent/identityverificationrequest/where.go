// Code generated by ent, DO NOT EDIT.

package identityverificationrequest

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/paycrest/aggregator/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldLTE(FieldID, id))
}

// WalletAddress applies equality check predicate on the "wallet_address" field. It's identical to WalletAddressEQ.
func WalletAddress(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldWalletAddress, v))
}

// WalletSignature applies equality check predicate on the "wallet_signature" field. It's identical to WalletSignatureEQ.
func WalletSignature(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldWalletSignature, v))
}

// PlatformRef applies equality check predicate on the "platform_ref" field. It's identical to PlatformRefEQ.
func PlatformRef(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldPlatformRef, v))
}

// VerificationURL applies equality check predicate on the "verification_url" field. It's identical to VerificationURLEQ.
func VerificationURL(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldVerificationURL, v))
}

// FeeReclaimed applies equality check predicate on the "fee_reclaimed" field. It's identical to FeeReclaimedEQ.
func FeeReclaimed(v bool) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldFeeReclaimed, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldUpdatedAt, v))
}

// LastURLCreatedAt applies equality check predicate on the "last_url_created_at" field. It's identical to LastURLCreatedAtEQ.
func LastURLCreatedAt(v time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldLastURLCreatedAt, v))
}

// WalletAddressEQ applies the EQ predicate on the "wallet_address" field.
func WalletAddressEQ(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldWalletAddress, v))
}

// WalletAddressNEQ applies the NEQ predicate on the "wallet_address" field.
func WalletAddressNEQ(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNEQ(FieldWalletAddress, v))
}

// WalletAddressIn applies the In predicate on the "wallet_address" field.
func WalletAddressIn(vs ...string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldIn(FieldWalletAddress, vs...))
}

// WalletAddressNotIn applies the NotIn predicate on the "wallet_address" field.
func WalletAddressNotIn(vs ...string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNotIn(FieldWalletAddress, vs...))
}

// WalletAddressGT applies the GT predicate on the "wallet_address" field.
func WalletAddressGT(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldGT(FieldWalletAddress, v))
}

// WalletAddressGTE applies the GTE predicate on the "wallet_address" field.
func WalletAddressGTE(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldGTE(FieldWalletAddress, v))
}

// WalletAddressLT applies the LT predicate on the "wallet_address" field.
func WalletAddressLT(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldLT(FieldWalletAddress, v))
}

// WalletAddressLTE applies the LTE predicate on the "wallet_address" field.
func WalletAddressLTE(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldLTE(FieldWalletAddress, v))
}

// WalletAddressContains applies the Contains predicate on the "wallet_address" field.
func WalletAddressContains(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldContains(FieldWalletAddress, v))
}

// WalletAddressHasPrefix applies the HasPrefix predicate on the "wallet_address" field.
func WalletAddressHasPrefix(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldHasPrefix(FieldWalletAddress, v))
}

// WalletAddressHasSuffix applies the HasSuffix predicate on the "wallet_address" field.
func WalletAddressHasSuffix(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldHasSuffix(FieldWalletAddress, v))
}

// WalletAddressEqualFold applies the EqualFold predicate on the "wallet_address" field.
func WalletAddressEqualFold(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEqualFold(FieldWalletAddress, v))
}

// WalletAddressContainsFold applies the ContainsFold predicate on the "wallet_address" field.
func WalletAddressContainsFold(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldContainsFold(FieldWalletAddress, v))
}

// WalletSignatureEQ applies the EQ predicate on the "wallet_signature" field.
func WalletSignatureEQ(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldWalletSignature, v))
}

// WalletSignatureNEQ applies the NEQ predicate on the "wallet_signature" field.
func WalletSignatureNEQ(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNEQ(FieldWalletSignature, v))
}

// WalletSignatureIn applies the In predicate on the "wallet_signature" field.
func WalletSignatureIn(vs ...string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldIn(FieldWalletSignature, vs...))
}

// WalletSignatureNotIn applies the NotIn predicate on the "wallet_signature" field.
func WalletSignatureNotIn(vs ...string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNotIn(FieldWalletSignature, vs...))
}

// WalletSignatureGT applies the GT predicate on the "wallet_signature" field.
func WalletSignatureGT(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldGT(FieldWalletSignature, v))
}

// WalletSignatureGTE applies the GTE predicate on the "wallet_signature" field.
func WalletSignatureGTE(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldGTE(FieldWalletSignature, v))
}

// WalletSignatureLT applies the LT predicate on the "wallet_signature" field.
func WalletSignatureLT(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldLT(FieldWalletSignature, v))
}

// WalletSignatureLTE applies the LTE predicate on the "wallet_signature" field.
func WalletSignatureLTE(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldLTE(FieldWalletSignature, v))
}

// WalletSignatureContains applies the Contains predicate on the "wallet_signature" field.
func WalletSignatureContains(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldContains(FieldWalletSignature, v))
}

// WalletSignatureHasPrefix applies the HasPrefix predicate on the "wallet_signature" field.
func WalletSignatureHasPrefix(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldHasPrefix(FieldWalletSignature, v))
}

// WalletSignatureHasSuffix applies the HasSuffix predicate on the "wallet_signature" field.
func WalletSignatureHasSuffix(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldHasSuffix(FieldWalletSignature, v))
}

// WalletSignatureEqualFold applies the EqualFold predicate on the "wallet_signature" field.
func WalletSignatureEqualFold(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEqualFold(FieldWalletSignature, v))
}

// WalletSignatureContainsFold applies the ContainsFold predicate on the "wallet_signature" field.
func WalletSignatureContainsFold(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldContainsFold(FieldWalletSignature, v))
}

// PlatformEQ applies the EQ predicate on the "platform" field.
func PlatformEQ(v Platform) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldPlatform, v))
}

// PlatformNEQ applies the NEQ predicate on the "platform" field.
func PlatformNEQ(v Platform) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNEQ(FieldPlatform, v))
}

// PlatformIn applies the In predicate on the "platform" field.
func PlatformIn(vs ...Platform) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldIn(FieldPlatform, vs...))
}

// PlatformNotIn applies the NotIn predicate on the "platform" field.
func PlatformNotIn(vs ...Platform) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNotIn(FieldPlatform, vs...))
}

// PlatformRefEQ applies the EQ predicate on the "platform_ref" field.
func PlatformRefEQ(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldPlatformRef, v))
}

// PlatformRefNEQ applies the NEQ predicate on the "platform_ref" field.
func PlatformRefNEQ(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNEQ(FieldPlatformRef, v))
}

// PlatformRefIn applies the In predicate on the "platform_ref" field.
func PlatformRefIn(vs ...string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldIn(FieldPlatformRef, vs...))
}

// PlatformRefNotIn applies the NotIn predicate on the "platform_ref" field.
func PlatformRefNotIn(vs ...string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNotIn(FieldPlatformRef, vs...))
}

// PlatformRefGT applies the GT predicate on the "platform_ref" field.
func PlatformRefGT(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldGT(FieldPlatformRef, v))
}

// PlatformRefGTE applies the GTE predicate on the "platform_ref" field.
func PlatformRefGTE(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldGTE(FieldPlatformRef, v))
}

// PlatformRefLT applies the LT predicate on the "platform_ref" field.
func PlatformRefLT(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldLT(FieldPlatformRef, v))
}

// PlatformRefLTE applies the LTE predicate on the "platform_ref" field.
func PlatformRefLTE(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldLTE(FieldPlatformRef, v))
}

// PlatformRefContains applies the Contains predicate on the "platform_ref" field.
func PlatformRefContains(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldContains(FieldPlatformRef, v))
}

// PlatformRefHasPrefix applies the HasPrefix predicate on the "platform_ref" field.
func PlatformRefHasPrefix(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldHasPrefix(FieldPlatformRef, v))
}

// PlatformRefHasSuffix applies the HasSuffix predicate on the "platform_ref" field.
func PlatformRefHasSuffix(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldHasSuffix(FieldPlatformRef, v))
}

// PlatformRefEqualFold applies the EqualFold predicate on the "platform_ref" field.
func PlatformRefEqualFold(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEqualFold(FieldPlatformRef, v))
}

// PlatformRefContainsFold applies the ContainsFold predicate on the "platform_ref" field.
func PlatformRefContainsFold(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldContainsFold(FieldPlatformRef, v))
}

// VerificationURLEQ applies the EQ predicate on the "verification_url" field.
func VerificationURLEQ(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldVerificationURL, v))
}

// VerificationURLNEQ applies the NEQ predicate on the "verification_url" field.
func VerificationURLNEQ(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNEQ(FieldVerificationURL, v))
}

// VerificationURLIn applies the In predicate on the "verification_url" field.
func VerificationURLIn(vs ...string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldIn(FieldVerificationURL, vs...))
}

// VerificationURLNotIn applies the NotIn predicate on the "verification_url" field.
func VerificationURLNotIn(vs ...string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNotIn(FieldVerificationURL, vs...))
}

// VerificationURLGT applies the GT predicate on the "verification_url" field.
func VerificationURLGT(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldGT(FieldVerificationURL, v))
}

// VerificationURLGTE applies the GTE predicate on the "verification_url" field.
func VerificationURLGTE(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldGTE(FieldVerificationURL, v))
}

// VerificationURLLT applies the LT predicate on the "verification_url" field.
func VerificationURLLT(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldLT(FieldVerificationURL, v))
}

// VerificationURLLTE applies the LTE predicate on the "verification_url" field.
func VerificationURLLTE(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldLTE(FieldVerificationURL, v))
}

// VerificationURLContains applies the Contains predicate on the "verification_url" field.
func VerificationURLContains(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldContains(FieldVerificationURL, v))
}

// VerificationURLHasPrefix applies the HasPrefix predicate on the "verification_url" field.
func VerificationURLHasPrefix(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldHasPrefix(FieldVerificationURL, v))
}

// VerificationURLHasSuffix applies the HasSuffix predicate on the "verification_url" field.
func VerificationURLHasSuffix(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldHasSuffix(FieldVerificationURL, v))
}

// VerificationURLEqualFold applies the EqualFold predicate on the "verification_url" field.
func VerificationURLEqualFold(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEqualFold(FieldVerificationURL, v))
}

// VerificationURLContainsFold applies the ContainsFold predicate on the "verification_url" field.
func VerificationURLContainsFold(v string) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldContainsFold(FieldVerificationURL, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v Status) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v Status) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...Status) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...Status) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNotIn(FieldStatus, vs...))
}

// FeeReclaimedEQ applies the EQ predicate on the "fee_reclaimed" field.
func FeeReclaimedEQ(v bool) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldFeeReclaimed, v))
}

// FeeReclaimedNEQ applies the NEQ predicate on the "fee_reclaimed" field.
func FeeReclaimedNEQ(v bool) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNEQ(FieldFeeReclaimed, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldLTE(FieldUpdatedAt, v))
}

// LastURLCreatedAtEQ applies the EQ predicate on the "last_url_created_at" field.
func LastURLCreatedAtEQ(v time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldEQ(FieldLastURLCreatedAt, v))
}

// LastURLCreatedAtNEQ applies the NEQ predicate on the "last_url_created_at" field.
func LastURLCreatedAtNEQ(v time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNEQ(FieldLastURLCreatedAt, v))
}

// LastURLCreatedAtIn applies the In predicate on the "last_url_created_at" field.
func LastURLCreatedAtIn(vs ...time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldIn(FieldLastURLCreatedAt, vs...))
}

// LastURLCreatedAtNotIn applies the NotIn predicate on the "last_url_created_at" field.
func LastURLCreatedAtNotIn(vs ...time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldNotIn(FieldLastURLCreatedAt, vs...))
}

// LastURLCreatedAtGT applies the GT predicate on the "last_url_created_at" field.
func LastURLCreatedAtGT(v time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldGT(FieldLastURLCreatedAt, v))
}

// LastURLCreatedAtGTE applies the GTE predicate on the "last_url_created_at" field.
func LastURLCreatedAtGTE(v time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldGTE(FieldLastURLCreatedAt, v))
}

// LastURLCreatedAtLT applies the LT predicate on the "last_url_created_at" field.
func LastURLCreatedAtLT(v time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldLT(FieldLastURLCreatedAt, v))
}

// LastURLCreatedAtLTE applies the LTE predicate on the "last_url_created_at" field.
func LastURLCreatedAtLTE(v time.Time) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.FieldLTE(FieldLastURLCreatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.IdentityVerificationRequest) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.IdentityVerificationRequest) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.IdentityVerificationRequest) predicate.IdentityVerificationRequest {
	return predicate.IdentityVerificationRequest(sql.NotPredicates(p))
}
