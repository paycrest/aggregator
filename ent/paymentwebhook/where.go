// Code generated by ent, DO NOT EDIT.

package paymentwebhook

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/google/uuid"
	"github.com/paycrest/aggregator/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldEQ(FieldUpdatedAt, v))
}

// WebhookID applies equality check predicate on the "webhook_id" field. It's identical to WebhookIDEQ.
func WebhookID(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldEQ(FieldWebhookID, v))
}

// WebhookSecret applies equality check predicate on the "webhook_secret" field. It's identical to WebhookSecretEQ.
func WebhookSecret(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldEQ(FieldWebhookSecret, v))
}

// CallbackURL applies equality check predicate on the "callback_url" field. It's identical to CallbackURLEQ.
func CallbackURL(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldEQ(FieldCallbackURL, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldLTE(FieldUpdatedAt, v))
}

// WebhookIDEQ applies the EQ predicate on the "webhook_id" field.
func WebhookIDEQ(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldEQ(FieldWebhookID, v))
}

// WebhookIDNEQ applies the NEQ predicate on the "webhook_id" field.
func WebhookIDNEQ(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldNEQ(FieldWebhookID, v))
}

// WebhookIDIn applies the In predicate on the "webhook_id" field.
func WebhookIDIn(vs ...string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldIn(FieldWebhookID, vs...))
}

// WebhookIDNotIn applies the NotIn predicate on the "webhook_id" field.
func WebhookIDNotIn(vs ...string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldNotIn(FieldWebhookID, vs...))
}

// WebhookIDGT applies the GT predicate on the "webhook_id" field.
func WebhookIDGT(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldGT(FieldWebhookID, v))
}

// WebhookIDGTE applies the GTE predicate on the "webhook_id" field.
func WebhookIDGTE(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldGTE(FieldWebhookID, v))
}

// WebhookIDLT applies the LT predicate on the "webhook_id" field.
func WebhookIDLT(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldLT(FieldWebhookID, v))
}

// WebhookIDLTE applies the LTE predicate on the "webhook_id" field.
func WebhookIDLTE(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldLTE(FieldWebhookID, v))
}

// WebhookIDContains applies the Contains predicate on the "webhook_id" field.
func WebhookIDContains(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldContains(FieldWebhookID, v))
}

// WebhookIDHasPrefix applies the HasPrefix predicate on the "webhook_id" field.
func WebhookIDHasPrefix(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldHasPrefix(FieldWebhookID, v))
}

// WebhookIDHasSuffix applies the HasSuffix predicate on the "webhook_id" field.
func WebhookIDHasSuffix(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldHasSuffix(FieldWebhookID, v))
}

// WebhookIDEqualFold applies the EqualFold predicate on the "webhook_id" field.
func WebhookIDEqualFold(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldEqualFold(FieldWebhookID, v))
}

// WebhookIDContainsFold applies the ContainsFold predicate on the "webhook_id" field.
func WebhookIDContainsFold(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldContainsFold(FieldWebhookID, v))
}

// WebhookSecretEQ applies the EQ predicate on the "webhook_secret" field.
func WebhookSecretEQ(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldEQ(FieldWebhookSecret, v))
}

// WebhookSecretNEQ applies the NEQ predicate on the "webhook_secret" field.
func WebhookSecretNEQ(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldNEQ(FieldWebhookSecret, v))
}

// WebhookSecretIn applies the In predicate on the "webhook_secret" field.
func WebhookSecretIn(vs ...string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldIn(FieldWebhookSecret, vs...))
}

// WebhookSecretNotIn applies the NotIn predicate on the "webhook_secret" field.
func WebhookSecretNotIn(vs ...string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldNotIn(FieldWebhookSecret, vs...))
}

// WebhookSecretGT applies the GT predicate on the "webhook_secret" field.
func WebhookSecretGT(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldGT(FieldWebhookSecret, v))
}

// WebhookSecretGTE applies the GTE predicate on the "webhook_secret" field.
func WebhookSecretGTE(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldGTE(FieldWebhookSecret, v))
}

// WebhookSecretLT applies the LT predicate on the "webhook_secret" field.
func WebhookSecretLT(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldLT(FieldWebhookSecret, v))
}

// WebhookSecretLTE applies the LTE predicate on the "webhook_secret" field.
func WebhookSecretLTE(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldLTE(FieldWebhookSecret, v))
}

// WebhookSecretContains applies the Contains predicate on the "webhook_secret" field.
func WebhookSecretContains(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldContains(FieldWebhookSecret, v))
}

// WebhookSecretHasPrefix applies the HasPrefix predicate on the "webhook_secret" field.
func WebhookSecretHasPrefix(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldHasPrefix(FieldWebhookSecret, v))
}

// WebhookSecretHasSuffix applies the HasSuffix predicate on the "webhook_secret" field.
func WebhookSecretHasSuffix(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldHasSuffix(FieldWebhookSecret, v))
}

// WebhookSecretEqualFold applies the EqualFold predicate on the "webhook_secret" field.
func WebhookSecretEqualFold(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldEqualFold(FieldWebhookSecret, v))
}

// WebhookSecretContainsFold applies the ContainsFold predicate on the "webhook_secret" field.
func WebhookSecretContainsFold(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldContainsFold(FieldWebhookSecret, v))
}

// CallbackURLEQ applies the EQ predicate on the "callback_url" field.
func CallbackURLEQ(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldEQ(FieldCallbackURL, v))
}

// CallbackURLNEQ applies the NEQ predicate on the "callback_url" field.
func CallbackURLNEQ(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldNEQ(FieldCallbackURL, v))
}

// CallbackURLIn applies the In predicate on the "callback_url" field.
func CallbackURLIn(vs ...string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldIn(FieldCallbackURL, vs...))
}

// CallbackURLNotIn applies the NotIn predicate on the "callback_url" field.
func CallbackURLNotIn(vs ...string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldNotIn(FieldCallbackURL, vs...))
}

// CallbackURLGT applies the GT predicate on the "callback_url" field.
func CallbackURLGT(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldGT(FieldCallbackURL, v))
}

// CallbackURLGTE applies the GTE predicate on the "callback_url" field.
func CallbackURLGTE(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldGTE(FieldCallbackURL, v))
}

// CallbackURLLT applies the LT predicate on the "callback_url" field.
func CallbackURLLT(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldLT(FieldCallbackURL, v))
}

// CallbackURLLTE applies the LTE predicate on the "callback_url" field.
func CallbackURLLTE(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldLTE(FieldCallbackURL, v))
}

// CallbackURLContains applies the Contains predicate on the "callback_url" field.
func CallbackURLContains(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldContains(FieldCallbackURL, v))
}

// CallbackURLHasPrefix applies the HasPrefix predicate on the "callback_url" field.
func CallbackURLHasPrefix(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldHasPrefix(FieldCallbackURL, v))
}

// CallbackURLHasSuffix applies the HasSuffix predicate on the "callback_url" field.
func CallbackURLHasSuffix(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldHasSuffix(FieldCallbackURL, v))
}

// CallbackURLEqualFold applies the EqualFold predicate on the "callback_url" field.
func CallbackURLEqualFold(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldEqualFold(FieldCallbackURL, v))
}

// CallbackURLContainsFold applies the ContainsFold predicate on the "callback_url" field.
func CallbackURLContainsFold(v string) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.FieldContainsFold(FieldCallbackURL, v))
}

// HasPaymentOrder applies the HasEdge predicate on the "payment_order" edge.
func HasPaymentOrder() predicate.PaymentWebhook {
	return predicate.PaymentWebhook(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, PaymentOrderTable, PaymentOrderColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPaymentOrderWith applies the HasEdge predicate on the "payment_order" edge with a given conditions (other predicates).
func HasPaymentOrderWith(preds ...predicate.PaymentOrder) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(func(s *sql.Selector) {
		step := newPaymentOrderStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PaymentWebhook) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PaymentWebhook) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PaymentWebhook) predicate.PaymentWebhook {
	return predicate.PaymentWebhook(sql.NotPredicates(p))
}
