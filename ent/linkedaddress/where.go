// Code generated by ent, DO NOT EDIT.

package linkedaddress

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/paycrest/aggregator/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldUpdatedAt, v))
}

// Address applies equality check predicate on the "address" field. It's identical to AddressEQ.
func Address(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldAddress, v))
}

// Salt applies equality check predicate on the "salt" field. It's identical to SaltEQ.
func Salt(v []byte) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldSalt, v))
}

// Institution applies equality check predicate on the "institution" field. It's identical to InstitutionEQ.
func Institution(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldInstitution, v))
}

// AccountIdentifier applies equality check predicate on the "account_identifier" field. It's identical to AccountIdentifierEQ.
func AccountIdentifier(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldAccountIdentifier, v))
}

// AccountName applies equality check predicate on the "account_name" field. It's identical to AccountNameEQ.
func AccountName(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldAccountName, v))
}

// OwnerAddress applies equality check predicate on the "owner_address" field. It's identical to OwnerAddressEQ.
func OwnerAddress(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldOwnerAddress, v))
}

// LastIndexedBlock applies equality check predicate on the "last_indexed_block" field. It's identical to LastIndexedBlockEQ.
func LastIndexedBlock(v int64) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldLastIndexedBlock, v))
}

// TxHash applies equality check predicate on the "tx_hash" field. It's identical to TxHashEQ.
func TxHash(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldTxHash, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLTE(FieldUpdatedAt, v))
}

// AddressEQ applies the EQ predicate on the "address" field.
func AddressEQ(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldAddress, v))
}

// AddressNEQ applies the NEQ predicate on the "address" field.
func AddressNEQ(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNEQ(FieldAddress, v))
}

// AddressIn applies the In predicate on the "address" field.
func AddressIn(vs ...string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldIn(FieldAddress, vs...))
}

// AddressNotIn applies the NotIn predicate on the "address" field.
func AddressNotIn(vs ...string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNotIn(FieldAddress, vs...))
}

// AddressGT applies the GT predicate on the "address" field.
func AddressGT(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGT(FieldAddress, v))
}

// AddressGTE applies the GTE predicate on the "address" field.
func AddressGTE(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGTE(FieldAddress, v))
}

// AddressLT applies the LT predicate on the "address" field.
func AddressLT(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLT(FieldAddress, v))
}

// AddressLTE applies the LTE predicate on the "address" field.
func AddressLTE(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLTE(FieldAddress, v))
}

// AddressContains applies the Contains predicate on the "address" field.
func AddressContains(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldContains(FieldAddress, v))
}

// AddressHasPrefix applies the HasPrefix predicate on the "address" field.
func AddressHasPrefix(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldHasPrefix(FieldAddress, v))
}

// AddressHasSuffix applies the HasSuffix predicate on the "address" field.
func AddressHasSuffix(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldHasSuffix(FieldAddress, v))
}

// AddressEqualFold applies the EqualFold predicate on the "address" field.
func AddressEqualFold(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEqualFold(FieldAddress, v))
}

// AddressContainsFold applies the ContainsFold predicate on the "address" field.
func AddressContainsFold(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldContainsFold(FieldAddress, v))
}

// SaltEQ applies the EQ predicate on the "salt" field.
func SaltEQ(v []byte) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldSalt, v))
}

// SaltNEQ applies the NEQ predicate on the "salt" field.
func SaltNEQ(v []byte) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNEQ(FieldSalt, v))
}

// SaltIn applies the In predicate on the "salt" field.
func SaltIn(vs ...[]byte) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldIn(FieldSalt, vs...))
}

// SaltNotIn applies the NotIn predicate on the "salt" field.
func SaltNotIn(vs ...[]byte) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNotIn(FieldSalt, vs...))
}

// SaltGT applies the GT predicate on the "salt" field.
func SaltGT(v []byte) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGT(FieldSalt, v))
}

// SaltGTE applies the GTE predicate on the "salt" field.
func SaltGTE(v []byte) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGTE(FieldSalt, v))
}

// SaltLT applies the LT predicate on the "salt" field.
func SaltLT(v []byte) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLT(FieldSalt, v))
}

// SaltLTE applies the LTE predicate on the "salt" field.
func SaltLTE(v []byte) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLTE(FieldSalt, v))
}

// InstitutionEQ applies the EQ predicate on the "institution" field.
func InstitutionEQ(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldInstitution, v))
}

// InstitutionNEQ applies the NEQ predicate on the "institution" field.
func InstitutionNEQ(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNEQ(FieldInstitution, v))
}

// InstitutionIn applies the In predicate on the "institution" field.
func InstitutionIn(vs ...string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldIn(FieldInstitution, vs...))
}

// InstitutionNotIn applies the NotIn predicate on the "institution" field.
func InstitutionNotIn(vs ...string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNotIn(FieldInstitution, vs...))
}

// InstitutionGT applies the GT predicate on the "institution" field.
func InstitutionGT(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGT(FieldInstitution, v))
}

// InstitutionGTE applies the GTE predicate on the "institution" field.
func InstitutionGTE(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGTE(FieldInstitution, v))
}

// InstitutionLT applies the LT predicate on the "institution" field.
func InstitutionLT(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLT(FieldInstitution, v))
}

// InstitutionLTE applies the LTE predicate on the "institution" field.
func InstitutionLTE(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLTE(FieldInstitution, v))
}

// InstitutionContains applies the Contains predicate on the "institution" field.
func InstitutionContains(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldContains(FieldInstitution, v))
}

// InstitutionHasPrefix applies the HasPrefix predicate on the "institution" field.
func InstitutionHasPrefix(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldHasPrefix(FieldInstitution, v))
}

// InstitutionHasSuffix applies the HasSuffix predicate on the "institution" field.
func InstitutionHasSuffix(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldHasSuffix(FieldInstitution, v))
}

// InstitutionEqualFold applies the EqualFold predicate on the "institution" field.
func InstitutionEqualFold(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEqualFold(FieldInstitution, v))
}

// InstitutionContainsFold applies the ContainsFold predicate on the "institution" field.
func InstitutionContainsFold(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldContainsFold(FieldInstitution, v))
}

// AccountIdentifierEQ applies the EQ predicate on the "account_identifier" field.
func AccountIdentifierEQ(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldAccountIdentifier, v))
}

// AccountIdentifierNEQ applies the NEQ predicate on the "account_identifier" field.
func AccountIdentifierNEQ(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNEQ(FieldAccountIdentifier, v))
}

// AccountIdentifierIn applies the In predicate on the "account_identifier" field.
func AccountIdentifierIn(vs ...string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldIn(FieldAccountIdentifier, vs...))
}

// AccountIdentifierNotIn applies the NotIn predicate on the "account_identifier" field.
func AccountIdentifierNotIn(vs ...string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNotIn(FieldAccountIdentifier, vs...))
}

// AccountIdentifierGT applies the GT predicate on the "account_identifier" field.
func AccountIdentifierGT(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGT(FieldAccountIdentifier, v))
}

// AccountIdentifierGTE applies the GTE predicate on the "account_identifier" field.
func AccountIdentifierGTE(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGTE(FieldAccountIdentifier, v))
}

// AccountIdentifierLT applies the LT predicate on the "account_identifier" field.
func AccountIdentifierLT(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLT(FieldAccountIdentifier, v))
}

// AccountIdentifierLTE applies the LTE predicate on the "account_identifier" field.
func AccountIdentifierLTE(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLTE(FieldAccountIdentifier, v))
}

// AccountIdentifierContains applies the Contains predicate on the "account_identifier" field.
func AccountIdentifierContains(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldContains(FieldAccountIdentifier, v))
}

// AccountIdentifierHasPrefix applies the HasPrefix predicate on the "account_identifier" field.
func AccountIdentifierHasPrefix(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldHasPrefix(FieldAccountIdentifier, v))
}

// AccountIdentifierHasSuffix applies the HasSuffix predicate on the "account_identifier" field.
func AccountIdentifierHasSuffix(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldHasSuffix(FieldAccountIdentifier, v))
}

// AccountIdentifierEqualFold applies the EqualFold predicate on the "account_identifier" field.
func AccountIdentifierEqualFold(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEqualFold(FieldAccountIdentifier, v))
}

// AccountIdentifierContainsFold applies the ContainsFold predicate on the "account_identifier" field.
func AccountIdentifierContainsFold(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldContainsFold(FieldAccountIdentifier, v))
}

// AccountNameEQ applies the EQ predicate on the "account_name" field.
func AccountNameEQ(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldAccountName, v))
}

// AccountNameNEQ applies the NEQ predicate on the "account_name" field.
func AccountNameNEQ(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNEQ(FieldAccountName, v))
}

// AccountNameIn applies the In predicate on the "account_name" field.
func AccountNameIn(vs ...string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldIn(FieldAccountName, vs...))
}

// AccountNameNotIn applies the NotIn predicate on the "account_name" field.
func AccountNameNotIn(vs ...string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNotIn(FieldAccountName, vs...))
}

// AccountNameGT applies the GT predicate on the "account_name" field.
func AccountNameGT(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGT(FieldAccountName, v))
}

// AccountNameGTE applies the GTE predicate on the "account_name" field.
func AccountNameGTE(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGTE(FieldAccountName, v))
}

// AccountNameLT applies the LT predicate on the "account_name" field.
func AccountNameLT(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLT(FieldAccountName, v))
}

// AccountNameLTE applies the LTE predicate on the "account_name" field.
func AccountNameLTE(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLTE(FieldAccountName, v))
}

// AccountNameContains applies the Contains predicate on the "account_name" field.
func AccountNameContains(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldContains(FieldAccountName, v))
}

// AccountNameHasPrefix applies the HasPrefix predicate on the "account_name" field.
func AccountNameHasPrefix(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldHasPrefix(FieldAccountName, v))
}

// AccountNameHasSuffix applies the HasSuffix predicate on the "account_name" field.
func AccountNameHasSuffix(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldHasSuffix(FieldAccountName, v))
}

// AccountNameEqualFold applies the EqualFold predicate on the "account_name" field.
func AccountNameEqualFold(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEqualFold(FieldAccountName, v))
}

// AccountNameContainsFold applies the ContainsFold predicate on the "account_name" field.
func AccountNameContainsFold(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldContainsFold(FieldAccountName, v))
}

// OwnerAddressEQ applies the EQ predicate on the "owner_address" field.
func OwnerAddressEQ(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldOwnerAddress, v))
}

// OwnerAddressNEQ applies the NEQ predicate on the "owner_address" field.
func OwnerAddressNEQ(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNEQ(FieldOwnerAddress, v))
}

// OwnerAddressIn applies the In predicate on the "owner_address" field.
func OwnerAddressIn(vs ...string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldIn(FieldOwnerAddress, vs...))
}

// OwnerAddressNotIn applies the NotIn predicate on the "owner_address" field.
func OwnerAddressNotIn(vs ...string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNotIn(FieldOwnerAddress, vs...))
}

// OwnerAddressGT applies the GT predicate on the "owner_address" field.
func OwnerAddressGT(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGT(FieldOwnerAddress, v))
}

// OwnerAddressGTE applies the GTE predicate on the "owner_address" field.
func OwnerAddressGTE(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGTE(FieldOwnerAddress, v))
}

// OwnerAddressLT applies the LT predicate on the "owner_address" field.
func OwnerAddressLT(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLT(FieldOwnerAddress, v))
}

// OwnerAddressLTE applies the LTE predicate on the "owner_address" field.
func OwnerAddressLTE(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLTE(FieldOwnerAddress, v))
}

// OwnerAddressContains applies the Contains predicate on the "owner_address" field.
func OwnerAddressContains(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldContains(FieldOwnerAddress, v))
}

// OwnerAddressHasPrefix applies the HasPrefix predicate on the "owner_address" field.
func OwnerAddressHasPrefix(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldHasPrefix(FieldOwnerAddress, v))
}

// OwnerAddressHasSuffix applies the HasSuffix predicate on the "owner_address" field.
func OwnerAddressHasSuffix(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldHasSuffix(FieldOwnerAddress, v))
}

// OwnerAddressEqualFold applies the EqualFold predicate on the "owner_address" field.
func OwnerAddressEqualFold(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEqualFold(FieldOwnerAddress, v))
}

// OwnerAddressContainsFold applies the ContainsFold predicate on the "owner_address" field.
func OwnerAddressContainsFold(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldContainsFold(FieldOwnerAddress, v))
}

// LastIndexedBlockEQ applies the EQ predicate on the "last_indexed_block" field.
func LastIndexedBlockEQ(v int64) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldLastIndexedBlock, v))
}

// LastIndexedBlockNEQ applies the NEQ predicate on the "last_indexed_block" field.
func LastIndexedBlockNEQ(v int64) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNEQ(FieldLastIndexedBlock, v))
}

// LastIndexedBlockIn applies the In predicate on the "last_indexed_block" field.
func LastIndexedBlockIn(vs ...int64) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldIn(FieldLastIndexedBlock, vs...))
}

// LastIndexedBlockNotIn applies the NotIn predicate on the "last_indexed_block" field.
func LastIndexedBlockNotIn(vs ...int64) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNotIn(FieldLastIndexedBlock, vs...))
}

// LastIndexedBlockGT applies the GT predicate on the "last_indexed_block" field.
func LastIndexedBlockGT(v int64) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGT(FieldLastIndexedBlock, v))
}

// LastIndexedBlockGTE applies the GTE predicate on the "last_indexed_block" field.
func LastIndexedBlockGTE(v int64) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGTE(FieldLastIndexedBlock, v))
}

// LastIndexedBlockLT applies the LT predicate on the "last_indexed_block" field.
func LastIndexedBlockLT(v int64) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLT(FieldLastIndexedBlock, v))
}

// LastIndexedBlockLTE applies the LTE predicate on the "last_indexed_block" field.
func LastIndexedBlockLTE(v int64) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLTE(FieldLastIndexedBlock, v))
}

// LastIndexedBlockIsNil applies the IsNil predicate on the "last_indexed_block" field.
func LastIndexedBlockIsNil() predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldIsNull(FieldLastIndexedBlock))
}

// LastIndexedBlockNotNil applies the NotNil predicate on the "last_indexed_block" field.
func LastIndexedBlockNotNil() predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNotNull(FieldLastIndexedBlock))
}

// TxHashEQ applies the EQ predicate on the "tx_hash" field.
func TxHashEQ(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEQ(FieldTxHash, v))
}

// TxHashNEQ applies the NEQ predicate on the "tx_hash" field.
func TxHashNEQ(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNEQ(FieldTxHash, v))
}

// TxHashIn applies the In predicate on the "tx_hash" field.
func TxHashIn(vs ...string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldIn(FieldTxHash, vs...))
}

// TxHashNotIn applies the NotIn predicate on the "tx_hash" field.
func TxHashNotIn(vs ...string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNotIn(FieldTxHash, vs...))
}

// TxHashGT applies the GT predicate on the "tx_hash" field.
func TxHashGT(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGT(FieldTxHash, v))
}

// TxHashGTE applies the GTE predicate on the "tx_hash" field.
func TxHashGTE(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldGTE(FieldTxHash, v))
}

// TxHashLT applies the LT predicate on the "tx_hash" field.
func TxHashLT(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLT(FieldTxHash, v))
}

// TxHashLTE applies the LTE predicate on the "tx_hash" field.
func TxHashLTE(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldLTE(FieldTxHash, v))
}

// TxHashContains applies the Contains predicate on the "tx_hash" field.
func TxHashContains(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldContains(FieldTxHash, v))
}

// TxHashHasPrefix applies the HasPrefix predicate on the "tx_hash" field.
func TxHashHasPrefix(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldHasPrefix(FieldTxHash, v))
}

// TxHashHasSuffix applies the HasSuffix predicate on the "tx_hash" field.
func TxHashHasSuffix(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldHasSuffix(FieldTxHash, v))
}

// TxHashIsNil applies the IsNil predicate on the "tx_hash" field.
func TxHashIsNil() predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldIsNull(FieldTxHash))
}

// TxHashNotNil applies the NotNil predicate on the "tx_hash" field.
func TxHashNotNil() predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldNotNull(FieldTxHash))
}

// TxHashEqualFold applies the EqualFold predicate on the "tx_hash" field.
func TxHashEqualFold(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldEqualFold(FieldTxHash, v))
}

// TxHashContainsFold applies the ContainsFold predicate on the "tx_hash" field.
func TxHashContainsFold(v string) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.FieldContainsFold(FieldTxHash, v))
}

// HasPaymentOrders applies the HasEdge predicate on the "payment_orders" edge.
func HasPaymentOrders() predicate.LinkedAddress {
	return predicate.LinkedAddress(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, PaymentOrdersTable, PaymentOrdersColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPaymentOrdersWith applies the HasEdge predicate on the "payment_orders" edge with a given conditions (other predicates).
func HasPaymentOrdersWith(preds ...predicate.PaymentOrder) predicate.LinkedAddress {
	return predicate.LinkedAddress(func(s *sql.Selector) {
		step := newPaymentOrdersStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.LinkedAddress) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.LinkedAddress) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.LinkedAddress) predicate.LinkedAddress {
	return predicate.LinkedAddress(sql.NotPredicates(p))
}
