// Code generated by ent, DO NOT EDIT.

package paymentorderrecipient

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/paycrest/aggregator/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldLTE(FieldID, id))
}

// Institution applies equality check predicate on the "institution" field. It's identical to InstitutionEQ.
func Institution(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldEQ(FieldInstitution, v))
}

// AccountIdentifier applies equality check predicate on the "account_identifier" field. It's identical to AccountIdentifierEQ.
func AccountIdentifier(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldEQ(FieldAccountIdentifier, v))
}

// AccountName applies equality check predicate on the "account_name" field. It's identical to AccountNameEQ.
func AccountName(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldEQ(FieldAccountName, v))
}

// Memo applies equality check predicate on the "memo" field. It's identical to MemoEQ.
func Memo(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldEQ(FieldMemo, v))
}

// ProviderID applies equality check predicate on the "provider_id" field. It's identical to ProviderIDEQ.
func ProviderID(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldEQ(FieldProviderID, v))
}

// InstitutionEQ applies the EQ predicate on the "institution" field.
func InstitutionEQ(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldEQ(FieldInstitution, v))
}

// InstitutionNEQ applies the NEQ predicate on the "institution" field.
func InstitutionNEQ(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldNEQ(FieldInstitution, v))
}

// InstitutionIn applies the In predicate on the "institution" field.
func InstitutionIn(vs ...string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldIn(FieldInstitution, vs...))
}

// InstitutionNotIn applies the NotIn predicate on the "institution" field.
func InstitutionNotIn(vs ...string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldNotIn(FieldInstitution, vs...))
}

// InstitutionGT applies the GT predicate on the "institution" field.
func InstitutionGT(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldGT(FieldInstitution, v))
}

// InstitutionGTE applies the GTE predicate on the "institution" field.
func InstitutionGTE(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldGTE(FieldInstitution, v))
}

// InstitutionLT applies the LT predicate on the "institution" field.
func InstitutionLT(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldLT(FieldInstitution, v))
}

// InstitutionLTE applies the LTE predicate on the "institution" field.
func InstitutionLTE(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldLTE(FieldInstitution, v))
}

// InstitutionContains applies the Contains predicate on the "institution" field.
func InstitutionContains(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldContains(FieldInstitution, v))
}

// InstitutionHasPrefix applies the HasPrefix predicate on the "institution" field.
func InstitutionHasPrefix(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldHasPrefix(FieldInstitution, v))
}

// InstitutionHasSuffix applies the HasSuffix predicate on the "institution" field.
func InstitutionHasSuffix(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldHasSuffix(FieldInstitution, v))
}

// InstitutionEqualFold applies the EqualFold predicate on the "institution" field.
func InstitutionEqualFold(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldEqualFold(FieldInstitution, v))
}

// InstitutionContainsFold applies the ContainsFold predicate on the "institution" field.
func InstitutionContainsFold(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldContainsFold(FieldInstitution, v))
}

// AccountIdentifierEQ applies the EQ predicate on the "account_identifier" field.
func AccountIdentifierEQ(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldEQ(FieldAccountIdentifier, v))
}

// AccountIdentifierNEQ applies the NEQ predicate on the "account_identifier" field.
func AccountIdentifierNEQ(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldNEQ(FieldAccountIdentifier, v))
}

// AccountIdentifierIn applies the In predicate on the "account_identifier" field.
func AccountIdentifierIn(vs ...string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldIn(FieldAccountIdentifier, vs...))
}

// AccountIdentifierNotIn applies the NotIn predicate on the "account_identifier" field.
func AccountIdentifierNotIn(vs ...string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldNotIn(FieldAccountIdentifier, vs...))
}

// AccountIdentifierGT applies the GT predicate on the "account_identifier" field.
func AccountIdentifierGT(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldGT(FieldAccountIdentifier, v))
}

// AccountIdentifierGTE applies the GTE predicate on the "account_identifier" field.
func AccountIdentifierGTE(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldGTE(FieldAccountIdentifier, v))
}

// AccountIdentifierLT applies the LT predicate on the "account_identifier" field.
func AccountIdentifierLT(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldLT(FieldAccountIdentifier, v))
}

// AccountIdentifierLTE applies the LTE predicate on the "account_identifier" field.
func AccountIdentifierLTE(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldLTE(FieldAccountIdentifier, v))
}

// AccountIdentifierContains applies the Contains predicate on the "account_identifier" field.
func AccountIdentifierContains(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldContains(FieldAccountIdentifier, v))
}

// AccountIdentifierHasPrefix applies the HasPrefix predicate on the "account_identifier" field.
func AccountIdentifierHasPrefix(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldHasPrefix(FieldAccountIdentifier, v))
}

// AccountIdentifierHasSuffix applies the HasSuffix predicate on the "account_identifier" field.
func AccountIdentifierHasSuffix(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldHasSuffix(FieldAccountIdentifier, v))
}

// AccountIdentifierEqualFold applies the EqualFold predicate on the "account_identifier" field.
func AccountIdentifierEqualFold(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldEqualFold(FieldAccountIdentifier, v))
}

// AccountIdentifierContainsFold applies the ContainsFold predicate on the "account_identifier" field.
func AccountIdentifierContainsFold(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldContainsFold(FieldAccountIdentifier, v))
}

// AccountNameEQ applies the EQ predicate on the "account_name" field.
func AccountNameEQ(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldEQ(FieldAccountName, v))
}

// AccountNameNEQ applies the NEQ predicate on the "account_name" field.
func AccountNameNEQ(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldNEQ(FieldAccountName, v))
}

// AccountNameIn applies the In predicate on the "account_name" field.
func AccountNameIn(vs ...string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldIn(FieldAccountName, vs...))
}

// AccountNameNotIn applies the NotIn predicate on the "account_name" field.
func AccountNameNotIn(vs ...string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldNotIn(FieldAccountName, vs...))
}

// AccountNameGT applies the GT predicate on the "account_name" field.
func AccountNameGT(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldGT(FieldAccountName, v))
}

// AccountNameGTE applies the GTE predicate on the "account_name" field.
func AccountNameGTE(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldGTE(FieldAccountName, v))
}

// AccountNameLT applies the LT predicate on the "account_name" field.
func AccountNameLT(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldLT(FieldAccountName, v))
}

// AccountNameLTE applies the LTE predicate on the "account_name" field.
func AccountNameLTE(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldLTE(FieldAccountName, v))
}

// AccountNameContains applies the Contains predicate on the "account_name" field.
func AccountNameContains(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldContains(FieldAccountName, v))
}

// AccountNameHasPrefix applies the HasPrefix predicate on the "account_name" field.
func AccountNameHasPrefix(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldHasPrefix(FieldAccountName, v))
}

// AccountNameHasSuffix applies the HasSuffix predicate on the "account_name" field.
func AccountNameHasSuffix(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldHasSuffix(FieldAccountName, v))
}

// AccountNameEqualFold applies the EqualFold predicate on the "account_name" field.
func AccountNameEqualFold(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldEqualFold(FieldAccountName, v))
}

// AccountNameContainsFold applies the ContainsFold predicate on the "account_name" field.
func AccountNameContainsFold(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldContainsFold(FieldAccountName, v))
}

// MemoEQ applies the EQ predicate on the "memo" field.
func MemoEQ(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldEQ(FieldMemo, v))
}

// MemoNEQ applies the NEQ predicate on the "memo" field.
func MemoNEQ(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldNEQ(FieldMemo, v))
}

// MemoIn applies the In predicate on the "memo" field.
func MemoIn(vs ...string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldIn(FieldMemo, vs...))
}

// MemoNotIn applies the NotIn predicate on the "memo" field.
func MemoNotIn(vs ...string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldNotIn(FieldMemo, vs...))
}

// MemoGT applies the GT predicate on the "memo" field.
func MemoGT(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldGT(FieldMemo, v))
}

// MemoGTE applies the GTE predicate on the "memo" field.
func MemoGTE(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldGTE(FieldMemo, v))
}

// MemoLT applies the LT predicate on the "memo" field.
func MemoLT(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldLT(FieldMemo, v))
}

// MemoLTE applies the LTE predicate on the "memo" field.
func MemoLTE(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldLTE(FieldMemo, v))
}

// MemoContains applies the Contains predicate on the "memo" field.
func MemoContains(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldContains(FieldMemo, v))
}

// MemoHasPrefix applies the HasPrefix predicate on the "memo" field.
func MemoHasPrefix(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldHasPrefix(FieldMemo, v))
}

// MemoHasSuffix applies the HasSuffix predicate on the "memo" field.
func MemoHasSuffix(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldHasSuffix(FieldMemo, v))
}

// MemoIsNil applies the IsNil predicate on the "memo" field.
func MemoIsNil() predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldIsNull(FieldMemo))
}

// MemoNotNil applies the NotNil predicate on the "memo" field.
func MemoNotNil() predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldNotNull(FieldMemo))
}

// MemoEqualFold applies the EqualFold predicate on the "memo" field.
func MemoEqualFold(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldEqualFold(FieldMemo, v))
}

// MemoContainsFold applies the ContainsFold predicate on the "memo" field.
func MemoContainsFold(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldContainsFold(FieldMemo, v))
}

// ProviderIDEQ applies the EQ predicate on the "provider_id" field.
func ProviderIDEQ(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldEQ(FieldProviderID, v))
}

// ProviderIDNEQ applies the NEQ predicate on the "provider_id" field.
func ProviderIDNEQ(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldNEQ(FieldProviderID, v))
}

// ProviderIDIn applies the In predicate on the "provider_id" field.
func ProviderIDIn(vs ...string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldIn(FieldProviderID, vs...))
}

// ProviderIDNotIn applies the NotIn predicate on the "provider_id" field.
func ProviderIDNotIn(vs ...string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldNotIn(FieldProviderID, vs...))
}

// ProviderIDGT applies the GT predicate on the "provider_id" field.
func ProviderIDGT(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldGT(FieldProviderID, v))
}

// ProviderIDGTE applies the GTE predicate on the "provider_id" field.
func ProviderIDGTE(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldGTE(FieldProviderID, v))
}

// ProviderIDLT applies the LT predicate on the "provider_id" field.
func ProviderIDLT(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldLT(FieldProviderID, v))
}

// ProviderIDLTE applies the LTE predicate on the "provider_id" field.
func ProviderIDLTE(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldLTE(FieldProviderID, v))
}

// ProviderIDContains applies the Contains predicate on the "provider_id" field.
func ProviderIDContains(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldContains(FieldProviderID, v))
}

// ProviderIDHasPrefix applies the HasPrefix predicate on the "provider_id" field.
func ProviderIDHasPrefix(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldHasPrefix(FieldProviderID, v))
}

// ProviderIDHasSuffix applies the HasSuffix predicate on the "provider_id" field.
func ProviderIDHasSuffix(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldHasSuffix(FieldProviderID, v))
}

// ProviderIDIsNil applies the IsNil predicate on the "provider_id" field.
func ProviderIDIsNil() predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldIsNull(FieldProviderID))
}

// ProviderIDNotNil applies the NotNil predicate on the "provider_id" field.
func ProviderIDNotNil() predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldNotNull(FieldProviderID))
}

// ProviderIDEqualFold applies the EqualFold predicate on the "provider_id" field.
func ProviderIDEqualFold(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldEqualFold(FieldProviderID, v))
}

// ProviderIDContainsFold applies the ContainsFold predicate on the "provider_id" field.
func ProviderIDContainsFold(v string) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.FieldContainsFold(FieldProviderID, v))
}

// HasPaymentOrder applies the HasEdge predicate on the "payment_order" edge.
func HasPaymentOrder() predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, PaymentOrderTable, PaymentOrderColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPaymentOrderWith applies the HasEdge predicate on the "payment_order" edge with a given conditions (other predicates).
func HasPaymentOrderWith(preds ...predicate.PaymentOrder) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(func(s *sql.Selector) {
		step := newPaymentOrderStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PaymentOrderRecipient) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PaymentOrderRecipient) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PaymentOrderRecipient) predicate.PaymentOrderRecipient {
	return predicate.PaymentOrderRecipient(sql.NotPredicates(p))
}
